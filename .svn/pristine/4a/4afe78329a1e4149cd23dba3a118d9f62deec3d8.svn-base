--[[
Function : GetStat
Scope : Test
Description :
Input :
Output :
Author : Raphaël Daumas
]]

function GearHelper:GetStat(nomStat)

    local statTable = {}
    statTable["crit"] = 10
    statTable["ponction"] = 17
    statTable["haste"] = 20
    statTable["avoid"] = 21
    statTable["mastery"] = 26
    statTable["vers"] = 30

    statTable["versatility"] = statTable["vers"]
    statTable["poly"] = statTable["vers"]
    statTable["polyvalence"] = statTable["vers"]
    statTable["maitrise"] = statTable["mastery"]
    statTable["avoidance"] = statTable["avoid"]
    statTable["evitement"] = statTable["avoid"]
    statTable["hate"] = statTable["haste"]
    statTable["lifesteal"] = statTable["ponction"]
    statTable["critique"] = statTable["crit"]
    statTable["critic"] = statTable["crit"]

    if statTable[nomStat] == nil then
        return -1
    else
        return GetCombatRating(statTable[string.lower(nomStat)])
    end
end

--[[
Function : IsMonture
Scope : Test
Description :
Input :
Output :
Author : Raphaël Daumas
]]

function GearHelper:IsMonture(lootName)

    -- test si monture
    local i = 1
    local creatureName  = C_MountJournal.GetDisplayedMountInfo(i)
    while creatureName ~= nil do
        if creatureName == lootName then
            return true
        end
        i = i + 1
        creatureName  = C_MountJournal.GetDisplayedMountInfo(i)
    end

    -- test mascotte
    i = 1
    local _, _, owned, _, _, _, _, speciesName, _, _, _, _, _, _, _, isTradeable = C_PetJournal.GetPetInfoByIndex(i)
    while speciesName ~= nil do
        if creatureName == speciesName then
            if not owned then
                return true
            elseif owned and isTradeable then
                return true
            end
        end
        i = i+1
        _, _, owned, _, _, _, _, speciesName, _, _, _, _, _, _, _, isTradeable = C_PetJournal.GetPetInfoByIndex(i)
    end
    -- test jouet

    --test légendaire
    local _, _, itemRarity = GetItemInfo(lootName)
    if itemRarity ~= nil and itemRarity > 4 then
        return true
    end


    return false
end

function GearHelper:nbSlotsTotal()
    local nbSlots = 0
    local i = 0
    while i <= 23 do
        if GetContainerNumSlots(i)  then
            nbSlots = nbSlots + GetContainerNumSlots(i)
        end
        i = i + 1
    end
    return nbSlots
end

function GearHelper:isPossibleEquip(itemLink)
    -- Pourquoi ne pas utiliser IsEquippableItem() ? (fonction api)
    local _, _, _, _, _, _, _, _, itemEquipLoc = GetItemInfo(itemLink)

    if itemEquipLoc == "" then
        if UnitName("player") == "Marsgames nil" then
            print("isPossibleEquip = false (result : \"\") --> "..itemLootLink)
        end
        return false
    elseif itemEquipLoc == "INVTYPE_SHIELD" or itemEquipLoc == "INVTYPE_WEAPONOFFHAND" or itemEquipLoc == "INVTYPE_HOLDABLE" or itemEquipLoc == "INVTYPE_WEAPON" then
        if GearHelper.charInventory["SecondaryHand"] == -1 then
            return false
        else
            return true
        end
    else
        return true
    end
end

function table.isEmpty (self)
    for _, _ in pairs(self) do
        return false
    end
    return true
end
