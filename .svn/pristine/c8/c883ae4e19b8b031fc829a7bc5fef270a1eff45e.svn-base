local L = LibStub("AceLocale-3.0"):GetLocale("GearHelper")
--local invMsg = tostring(GearHelper.db.profile.inviteMessage)

local ghOptionsTable = {
  name = "GearHelper",
  type = "group",
  childGroups  = "select",
  args = {
    group1 = {
      order = 0,
      name = " ",
      type = "group",
      inline = true,
      args = {
        enable = {
          order = 0,
          name = "Enable GearHelper",
          desc = L["UIGHCheckBoxAddon"],
          type = "toggle",
          set = function(info,val) GearHelper.db.profile.addonEnabled = val end,
          get = function(info) return GearHelper.db.profile.addonEnabled end
        },
        debug = {
          order = 1,
          name = "Debug",
          desc = L["UIGHCheckBoxAddon"],
          type = "toggle",
          set = function(info,val) end,
          get = function(info) end
        }
      }
    },
    spacer1  = {
      order = 1,
      name = "Gear Options",
      type = "header",
    },
    group2 = {
      order = 2,
      name = " ",
      type = "group",
      inline = true,
      args = {
        autoGreed = {
          order = 2,
          name = "Greed",
          desc = L["UIGHCheckBoxAutoGreed"],
          type = "toggle",
          set = function(info,val) GearHelper.db.profile.autoGreed = val end,
          get = function(info) return GearHelper.db.profile.autoGreed end
        },
        autoNeed = {
          order = 3,
          name = "Need",
          desc = L["UIGHCheckBoxAutoNeed"],
          type = "toggle",
          set = function(info,val) GearHelper.db.profile.autoNeed = val end,
          get = function(info) return GearHelper.db.profile.autoNeed end
        },
        autoEquipLootedStuff = {
          order = 4,
          name = "Auto equip looted stuff",
          desc = L["UIGHCheckBoxAutoEquipLootedStuff"],
          type = "toggle",
          set = function(info,val) GearHelper.db.profile.autoEquipLooted.actual = val end,
          get = function(info) return GearHelper.db.profile.autoEquipLooted.actual end
        },
        autoEquipWhenSwitchSpe = {
          order = 7,
          name = "Spec Switch",
          desc = L["UIGHCheckBoxAutoEquipWhenSwitchSpe"],
          type = "toggle",
          set = function(info,val) GearHelper.db.profile.autoEquipWhenSwitchSpe = val end,
          get = function(info) return GearHelper.db.profile.autoEquipWhenSwitchSpe end
        },
        askLootRaid = {
          order = 6,
          name = "Loot in raid",
          desc = "Enables / disables ask for loot in raid",
          type = "toggle",
          set = function(info,val) GearHelper.db.profile.askLootRaid = val end,
          get = function(info) return GearHelper.db.profile.askLootRaid end
        },
        printWhenEquip = {
          order = 5,
          name = "Print When Equip",
          desc = "Enables / disables print when equip",
          type = "toggle",
          set = function(info,val) GearHelper.db.profile.printWhenEquip = val end,
          get = function(info) return GearHelper.db.profile.printWhenEquip end
        }
      }
    },
    spacer2 = {
      order = 3,
      name = "Misc Options",
      type = "header",
    },
    group3 = {
      order = 4,
      name = " ",
      type = "group",
      inline = true,
      args = {
        autoSell = {
          order = 0,
          name = "Sell Grey Items",
          desc = L["UIGHCheckBoxSellGrey"],
          type = "toggle",
          set = function(info,val) GearHelper.db.profile.sellGreyItems = val end,
          get = function(info) return GearHelper.db.profile.sellGreyItems end
        },
        autoAcceptQuestReward = {
          order = 1,
          name = "Quests Rewards",
          desc = L["UIGHCheckBoxAutoAcceptQuestReward"],
          type = "toggle",
          set = function(info,val) GearHelper.db.profile.autoAcceptQuestReward = val end,
          get = function(info) return GearHelper.db.profile.autoAcceptQuestReward end
        },
        autoRepair = {
          order = 2,
          name = "Auto-Repair",
          desc = "Enables / disables automatic reparation",
          type = "select",
          values = {
            [0] = "Do Not Repair",
            [1] = "Repair with own gold",
            [2] = "Repair with guild gold",
          },
          set = function(info,val) GearHelper.db.profile.autoRepair = val end,
          get = function(info) return GearHelper.db.profile.autoRepair end,
          style = "dropdown",
        },
        autoTell = {
          order = 3,
          name = "Loot Announcement",
          desc = L["checkGHAutoTell"],
          type = "toggle",
          width = "full",
          set = function(info,val) GearHelper.db.profile.autoTell = val end,
          get = function(info) return GearHelper.db.profile.autoTell end
        },
        autoInvite = {
          order = 4,
          name = "Invite On Whisper",
          desc = L["UIGHCheckBoxAutoInvite"],--..invMsg,
          type = "toggle",
          set = function(info,val) GearHelper.db.profile.autoInvite = val end,
          get = function(info) return GearHelper.db.profile.autoInvite end
        },
        inviteMessage = {
          order = 5,
          name = "Invite Message",
          desc = "Invite message to tell you to be invited",
          type = "input",
          --set = function(info,val) GearHelper.db.profile.inviteMessage = val end,
          set = function(info,val) GearHelper:setInviteMessage(val) end,
          get = function(info) return GearHelper.db.profile.inviteMessage end
        },
      }
    },
    -- moreoptions={
    --   name = "More Options",
    --   type = "group",
    --   args={
    --     -- more options go here
    --   }
    -- }
  }
}

local fdpTable = {
  name = "Custom Weights",
  type = "group",
  childGroups = "tree",
  args  = {
    inviteMessage = {
      order = 5,
      name = "Invite Message",
      desc = "Invite message to tell you to be invited",
      type = "input",
      --set = function(info,val) GearHelper.db.profile.inviteMessage = val end,
      set = function(info,val) GearHelper:setInviteMessage(val) end,
      get = function(info) return GearHelper.db.profile.inviteMessage end
    }
  }
}

local aboutTable = {
  name = "About",
  type = "group",
  args  = {
    version = {
      order = 0,
      fontSize = "medium",
      name = "\n\n\n\n\n                    |cFFFFFF00Version :|r 4124.27.0.2.0.31\n",
      type = "description",
    },
    author = {
      order =  1,
      fontSize = "medium",
      name = "                    |cFFFFFF00Author :|r Ta m√®re \n",
      type = "description",
    },
    email = {
      order =  2,
      fontSize = "medium",
      name = "                    |cFFFFFF00E-Mail :|r fdp@fdp.land \n",
      type = "description",
    },
    bug = {
      order =  3,
      fontSize = "medium",
      name = "                    |cFFFFFF00BugReport :|r https://wow.curseforge.com/projects/gearhelper \n",
      type = "description",
    },
    credits = {
      order =  4,
      fontSize = "medium",
      name = "                    |cFFFFFF00Credits :|r A leurs tantes les putes\n",
      type = "description",
    },
  }
}

LibStub("AceConfig-3.0"):RegisterOptionsTable("GearHelper", ghOptionsTable, "ghOption")
LibStub("AceConfig-3.0"):RegisterOptionsTable("Custom Weights", fdpTable)
LibStub("AceConfig-3.0"):RegisterOptionsTable("About", aboutTable)

GearHelper.optionsFrame = LibStub("AceConfigDialog-3.0"):AddToBlizOptions("GearHelper")
LibStub("AceConfigDialog-3.0"):AddToBlizOptions("Custom Weights", "Custom Weights", "GearHelper")
LibStub("AceConfigDialog-3.0"):AddToBlizOptions("About", "About", "GearHelper")
