local L = LibStub("AceLocale-3.0"):GetLocale("GearHelper")

--[[
Function : Print
Scope : GearHelper
Description : Print object based on debug flag
Input : object = object to print
Output :
Author : Raphaël Saget
]]

function GearHelper:Print(object)
  if object ~= nil then
    if GearHelper.db.profile.debug and type(object) == "table" then
      foreach(object, print)
    elseif GearHelper.db.profile.debug then
      print(object)
    end
  end
end

--[[
Function : SiObjetGris
Scope : GearHelper
Description :
Input :
Output :
Author : Raphaël Daumas
]]

function GearHelper:SiObjetGris( itemID )
    local _, _, itemRarity, _, _, _, _, _, _, _, itemSellPrice = GetItemInfo(itemID)
    local result = {}

    if itemRarity == 0 then
        table.insert(result, true)
        table.insert(result, itemSellPrice)
        return result
    else
        table.insert(result, false)
        table.insert(result, 0)
        return result
    end
end

--[[
Function : IsEquipped
Scope : GearHelper
Description :
Input :
Output :
Author : Raphaël Daumas
]]

function GearHelper:IsEquipped(itemLink)
    local _, _, _, _, _, _, _, _, itemEquipLoc = GetItemInfo(itemLink)
    if itemEquipLoc == "INVTYPE_TRINKET" then
        if GearHelper.charInventory["Trinket0"] == itemLink or GearHelper.charInventory["Trinket1"] == itemLink then
            return true
        end
    elseif itemEquipLoc == "INVTYPE_FINGER" then
        if GearHelper.charInventory["Finger0"] == itemLink or GearHelper.charInventory["Finger1"] == itemLink then
            return true
        end
    elseif itemEquipLoc== "INVTYPE_WEAPON" then
        if GearHelper.charInventory["MainHand"] == itemLink or GearHelper.charInventory["SecondaryHand"] == itemLink then
            return true
        end
    else
        if GearHelper.charInventory[GearHelper.itemSlot[itemEquipLoc]] == itemLink then
            return true
        end
    end
    return false
end

--[[
Function : IsEquipableByMe
Scope : GearHelper
Description :
Input :
Output :
Author : Raphaël Daumas
]]

function GearHelper:IsEquipableByMe(itemLink)
    if IsEquippableItem(itemLink) then
        local _, _, quality, _, reqLevel, _, subclass, _, equipSlot, _, _ = GetItemInfo(itemLink)
        local myLevel = UnitLevel("player")
        local _, myClass = UnitClass("player")
        local isItMadeForMe = false
        local currentSpec = GetSpecialization()
        local playerSpec = GetSpecializationInfo(currentSpec)
        local _, _, _, _, itemID = string.find(itemLink, "|?c?f?f?(%x*)|?H?([^:]*):?(%d+):?(%d*):?(%d*):?(%d*):?(%d*):?(%d*):?(%-?%d*):?(%-?%d*):?(%d*):?(%d*):?(%-?%d*)|?h?%[?([^%[%]]*)%]?|?h?|?r?")

        --Is it an item that i can equip with my character ?
        table.foreach(L.IsEquipable[tostring(myClass)], function(_, v)
            if subclass == v then
                isItMadeForMe = true
            end
        end)

        if isItMadeForMe == false then
          return false
        --Is the required level not too high ?
        elseif reqLevel ~= nil and reqLevel > myLevel then
            return false
        --Is it a common item shared by all classes ?
      elseif equipSlot == "INVTYPE_FINGER" or equipSlot == "INVTYPE_NECK" or equipSlot == "INVTYPE_TRINKET" or equipSlot == "INVTYPE_BODY" or equipSlot == "INVTYPE_TABARD" or equipSlot == "INVTYPE_CLOAK" and subclass == L["divers"] and equipSlot ~= "INVTYPE_BAG" then
          return true
        --Is it an artifact weapon ?
        elseif quality == 6 then
          if type(L.Artifact[tostring(playerSpec)]) == "string" then
            if tostring(itemID) == L.Artifact[tostring(playerSpec)] then
              return true
            end
          else
            table.foreach(L.Artifact[tostring(playerSpec)], function(_, v)
              if tostring(itemID) == v then
                return true
              end
            end)
          end
        --If this is an equipable item by me but not an item that require a specific return, just return true
        else
          return true
        end

    else
        return false
    end
end

--[[
Function : IsSlotEmpty
Scope : GearHelper
Description :
Input :
Output :
Author : Raphaël Daumas
]]

function GearHelper:IsSlotEmpty(equipLoc)
    local result = {}
    if equipLoc == "INVTYPE_TRINKET" then
        if GearHelper.charInventory["Trinket0"] == 0 then
            table.insert(result, true)
        else
            table.insert(result, false)
        end

        if GearHelper.charInventory["Trinket1"] == 0 then
            table.insert(result, true)
        else
            table.insert(result, false)
        end
    elseif equipLoc == "INVTYPE_FINGER" then
        if GearHelper.charInventory["Finger0"] == 0 then
            table.insert(result,true)
        else
            table.insert(result,false)
        end

        if GearHelper.charInventory["Finger1"] == 0 then
            table.insert(result, true)
        else
            table.insert(result, false)
        end
    elseif equipLoc == "INVTYPE_WEAPON" or equipLoc == "INVTYPE_2HWEAPON" or equipLoc == "INVTYPE_RANGEDRIGHT" then
        if GearHelper.charInventory["MainHand"] == 0 then
            table.insert(result,true)
        else
            table.insert(result,false)
        end

        if GearHelper.charInventory["SecondaryHand"] == 0 or GearHelper.charInventory["SecondaryHand"] == -1 then
            table.insert(result, true)
        else
            table.insert(result, false)
        end
    else
        if GearHelper.charInventory[GearHelper.itemSlot[equipLoc]] == 0 then
            table.insert(result, true)
        else
            table.insert(result, false)
        end
    end
    return result
end

--[[
Function : IsInTable
Scope : GearHelper
Description :
Input :
Output :
Author : Raphaël Daumas
]]

function GearHelper:IsInTable(array, data)
    local result = false
    table.foreach(array, function(k, _)
        local ret = strmatch(array[k], data)
        if ret ~= nil then
            result = true
        end
    end)
    return result
end

--[[
Function : ReturnGoodLink
Scope : GearHelper
Description :
Input :
Output :
Author : Raphaël Daumas
]]

function GearHelper:ReturnGoodLink(itemLink, target, tar)

    local itemString = select(3, strfind(itemLink, "|H(.+)|h"))
    local _, itemId = strsplit(":", itemString)

    if tar == nil then
        tar = ""
    end

    return "|HGHWhispWhenClick:askIfHeNeed_"..target.."_"..itemId.."_|h"..tar.."|h"

end

--[[
Function : CouleurClasse
Scope : GearHelper
Description :
Input :
Output :
Author : Raphaël Daumas
]]

function GearHelper:CouleurClasse( classID )
    if classID == 1 then -- war
        return "|cFFC79C6E"
    elseif classID == 2 then -- pala
        return "|cFFF58CBA"
    elseif classID == 3 then -- hunter
        return "|cFFABD473"
    elseif classID == 4 then -- rogue
        return "|cFFFFF569"
    elseif classID == 5 then -- Pretre
        return "|cFFFFFFFF"
    elseif classID == 6 then -- dk
        return "|cFF41F3B"
    elseif classID == 7 then -- chamy
        return "|cFF0070DE"
    elseif classID == 8 then -- mage
        return "|cFF69CCF0"
    elseif classID == 9 then -- démo
        return "|cFF9482C9"
    elseif classID == 10 then -- moine
        return "|cFF00FF96"
    elseif classID == 11 then -- druid
        return "|cFFFF7D0A"
    elseif classID == 12 then -- DH
        return "|cFFA330C9"
    end
end
