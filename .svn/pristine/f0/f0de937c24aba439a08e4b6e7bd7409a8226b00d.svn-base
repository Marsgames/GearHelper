local L = LibStub("AceLocale-3.0"):GetLocale("GearHelper")

local ghOptionsTable = {
  name = "GearHelper",
  type = "group",
  args = {
    enable = {
      name = "Enable",
      desc = "Enables / disables the addon",
      type = "toggle",
      set = function(info,val) GearHelper.db.profile.addonEnabled = val end,
      get = function(info) return GearHelper.db.profile.addonEnabled end
    },
    autoSell = {
      name = "AutoSell",
      desc = "Enables / disables common items automatic selling",
      type = "toggle",
      set = function(info,val) GearHelper.db.profile.sellGreyItems = val end,
      get = function(info) return GearHelper.db.profile.sellGreyItems end
    },
    autoGreed = {
      name = "AutoGreed",
      desc = "Enables / disables automatic greed",
      type = "toggle",
      set = function(info,val) GearHelper.db.profile.autoGreed = val end,
      get = function(info) return GearHelper.db.profile.autoGreed end
    },
    autoAcceptQuestReward = {
      name = "AutoGreed",
      desc = "Enables / disables automatic acceptation of quest rewards",
      type = "toggle",
      set = function(info,val) GearHelper.db.profile.autoAcceptQuestReward = val end,
      get = function(info) return GearHelper.db.profile.autoAcceptQuestReward end
    },
    autoNeed = {
      name = "AutoNeed",
      desc = "Enables / disables automatic need on instance loots",
      type = "toggle",
      set = function(info,val) GearHelper.db.profile.autoNeed = val end,
      get = function(info) return GearHelper.db.profile.autoNeed end
    },
    autoEquipLootedStuff = {
      name = "AutoEquipLootedStuff",
      desc = "Enables / disables automatic equip looted stuff",
      type = "toggle",
      set = function(info,val) GearHelper.db.profile.autoEquipLooted.actual = val end,
      get = function(info) return GearHelper.db.profile.autoEquipLooted.actual end
    },
    autoEquipWhenSwitchSpe = {
      name = "AutoEquiWhenSwitchSpe",
      desc = "Enables / disables automatic equi when switch specialization",
      type = "toggle",
      set = function(info,val) GearHelper.db.profile.autoEquipWhenSwitchSpe = val end,
      get = function(info) return GearHelper.db.profile.autoEquipWhenSwitchSpe end
    },
    minimapButton = {
      name = "MinimapButton",
      desc = "Enables / disables minimap buttons",
      type = "toggle",
      set = function(info,val) GearHelper.db.profile.minimapButton = val end,
      get = function(info) return GearHelper.db.profile.minimapButton end
    },
    autoRepair = {
      name = "AutoRepair",
      desc = "Enables / disables automatic reparation",
      type = "select",
      values = {
        [0] = "Do Not Repair",
        [1] = "Repair with own gold",
        [2] = "Repair with guild gold",
      },
      set = function(info,val) GearHelper.db.profile.autoRepair = val end,
      get = function(info) return GearHelper.db.profile.autoRepair end,
      style = "dropdown",
    },
    autoInvite = {
      name = "AutoInvite",
      desc = "Enables / disables automatic invite",
      type = "toggle",
      set = function(info,val) GearHelper.db.profile.autoInvite = val end,
      get = function(info) return GearHelper.db.profile.autoInvite end
    },
    autoTell = {
      name = "AutoTell",
      desc = "Enables / disables automatic tell",
      type = "toggle",
      set = function(info,val) GearHelper.db.profile.autoTell = val end,
      get = function(info) return GearHelper.db.profile.autoTell end
    },
    inviteMessage = {
      name = "AutoTell",
      desc = "Automatic message",
      type = "input",
      set = function(info,val) GearHelper.db.profile.inviteMessage = val end,
      get = function(info) return GearHelper.db.profile.inviteMessage end
    },
    askLootRaid = {
      name = "AskLootRaid",
      desc = "Enables / disables ask for loot in raid",
      type = "toggle",
      set = function(info,val) GearHelper.db.profile.askLootRaid = val end,
      get = function(info) return GearHelper.db.profile.askLootRaid end
    },
    printWhenEquip = {
      name = "PrintWhenEquip",
      desc = "Enables / disables print when equip",
      type = "toggle",
      set = function(info,val) GearHelper.db.profile.printWhenEquip = val end,
      get = function(info) return GearHelper.db.profile.printWhenEquip end
    },
    moreoptions={
      name = "More Options",
      type = "group",
      args={
        -- more options go here
      }
    }
  }
}

LibStub("AceConfig-3.0"):RegisterOptionsTable("GearHelper", ghOptionsTable, "gh")
