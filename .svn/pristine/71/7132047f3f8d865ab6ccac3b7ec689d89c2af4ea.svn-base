local L = LibStub("AceLocale-3.0"):GetLocale("GearHelper")
--local invMsg = tostring(GearHelper.db.profile.inviteMessage)

local ghOptionsTable = {
  name = "GearHelper",
  type = "group",
  args = {
    enable = {
      name = "Enable GearHelper",
      desc = L["UIGHCheckBoxAddon"],
      type = "toggle",
      set = function(info,val) GearHelper.db.profile.addonEnabled = val end,
      get = function(info) return GearHelper.db.profile.addonEnabled end
    },
    autoSell = {
      name = "Auto sell grey items",
      desc = L["UIGHCheckBoxSellGrey"],
      type = "toggle",
      set = function(info,val) GearHelper.db.profile.sellGreyItems = val end,
      get = function(info) return GearHelper.db.profile.sellGreyItems end
    },
    autoGreed = {
      name = "Auto greed",
      desc = L["UIGHCheckBoxAutoGreed"],
      type = "toggle",
      set = function(info,val) GearHelper.db.profile.autoGreed = val end,
      get = function(info) return GearHelper.db.profile.autoGreed end
    },
    autoAcceptQuestReward = {
      name = "Auto accept quest reward",
      desc = L["UIGHCheckBoxAutoAcceptQuestReward"],
      type = "toggle",
      set = function(info,val) GearHelper.db.profile.autoAcceptQuestReward = val end,
      get = function(info) return GearHelper.db.profile.autoAcceptQuestReward end
    },
    autoNeed = {
      name = "Auto need",
      desc = L["UIGHCheckBoxAutoNeed"],
      type = "toggle",
      set = function(info,val) GearHelper.db.profile.autoNeed = val end,
      get = function(info) return GearHelper.db.profile.autoNeed end
    },
    autoEquipLootedStuff = {
      name = "Auto equip looted stuff",
      desc = L["UIGHCheckBoxAutoEquipLootedStuff"],
      type = "toggle",
      set = function(info,val) GearHelper.db.profile.autoEquipLooted.actual = val end,
      get = function(info) return GearHelper.db.profile.autoEquipLooted.actual end
    },
    autoEquipWhenSwitchSpe = {
      name = "Auto equip when changing spec",
      desc = L["UIGHCheckBoxAutoEquipWhenSwitchSpe"],
      type = "toggle",
      set = function(info,val) GearHelper.db.profile.autoEquipWhenSwitchSpe = val end,
      get = function(info) return GearHelper.db.profile.autoEquipWhenSwitchSpe end
    },
    -- minimapButton = {
    --   name = "MinimapButton",
    --   desc = "Enables / disables minimap buttons",
    --   type = "toggle",
    --   set = function(info,val) GearHelper.db.profile.minimapButton = val end,
    --   get = function(info) return GearHelper.db.profile.minimapButton end
    -- },
    autoRepair = {
      name = "Auto repair",
      desc = "Enables / disables automatic reparation",
      type = "select",
      values = {
        [0] = "Do Not Repair",
        [1] = "Repair with own gold",
        [2] = "Repair with guild gold",
      },
      set = function(info,val) GearHelper.db.profile.autoRepair = val end,
      get = function(info) return GearHelper.db.profile.autoRepair end,
      style = "dropdown",
    },
    autoInvite = {
      name = "Auto invite when whisper",
      desc = L["UIGHCheckBoxAutoInvite"],--..invMsg,
      type = "toggle",
      set = function(info,val) GearHelper.db.profile.autoInvite = val end,
      get = function(info) return GearHelper.db.profile.autoInvite end
    },
    autoTell = {
      name = "Auto Tell loot in raid",
      desc = L["checkGHAutoTell"],
      type = "toggle",
      set = function(info,val) GearHelper.db.profile.autoTell = val end,
      get = function(info) return GearHelper.db.profile.autoTell end
    },
    inviteMessage = {
      name = "Invite message",
      desc = "Invite message to tell you to be invited",
      type = "input",
      --set = function(info,val) GearHelper.db.profile.inviteMessage = val end,
      set = function(info,val) GearHelper:setInviteMessage(val) end,
      get = function(info) return GearHelper.db.profile.inviteMessage end
    },
    askLootRaid = {
      name = "Ask loot in raid",
      desc = "Enables / disables ask for loot in raid",
      type = "toggle",
      set = function(info,val) GearHelper.db.profile.askLootRaid = val end,
      get = function(info) return GearHelper.db.profile.askLootRaid end
    },
    printWhenEquip = {
      name = "PrintWhenEquip",
      desc = "Enables / disables print when equip",
      type = "toggle",
      set = function(info,val) GearHelper.db.profile.printWhenEquip = val end,
      get = function(info) return GearHelper.db.profile.printWhenEquip end
    },
    -- moreoptions={
    --   name = "More Options",
    --   type = "group",
    --   args={
    --     -- more options go here
    --   }
    -- }
  }
}

LibStub("AceConfig-3.0"):RegisterOptionsTable("GearHelper", ghOptionsTable, "ghOption")

GearHelper.optionsFrame = LibStub("AceConfigDialog-3.0"):AddToBlizOptions("GearHelper")
